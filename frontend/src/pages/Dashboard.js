import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { Typography, Paper, Grid, Box, Button, IconButton, Alert, CircularProgress } from '@mui/material';
import { 
  InsertDriveFileOutlined,
  MoreHoriz,
  Logout,
  History,
  Stars 
} from '@mui/icons-material';
import { useDocuments } from '../hooks/useDocuments';
import { API_BASE_URL } from '../config';
import axios from 'axios';

export default function Dashboard() {
  const navigate = useNavigate();
  const [activeTab, setActiveTab] = useState('history');
  const [chatHistory, setChatHistory] = useState([]);
  const [chatLoading, setChatLoading] = useState(false);
  const { documents: files, loading, error } = useDocuments();

  const handleOpenFile = (file) => {
    // Simple file download - open in new tab
    window.open(`${API_BASE_URL}/documents/${file.id}/download`, '_blank');
  };

  const handleChatHistory = (file) => {
    // Navigate to chat for this specific document
    navigate(`/chat/${file.id}`);
  };

  const handleLogout = () => {
    localStorage.removeItem('user_id');
    localStorage.removeItem('user_email');
    navigate('/login');
  };

  // Load chat history from backend
  useEffect(() => {
    const loadChatHistory = async () => {
      const userId = localStorage.getItem('user_id');
      if (!userId) return;

      setChatLoading(true);
      try {
        const response = await axios.get(`${API_BASE_URL}/chats/${userId}`);
        console.log('Chat history response:', response.data);
        setChatHistory(response.data);
      } catch (error) {
        console.error('Failed to load chat history:', error);
        console.error('Error details:', error.response?.data);
      } finally {
        setChatLoading(false);
      }
    };

    if (activeTab === 'history') {
      loadChatHistory();
    }
  }, [activeTab]);

  const renderContent = () => {
    switch (activeTab) {  
      case 'history':  // activeTab by using cases, sample code generated by AI
        return (
          <Box 
            sx={{ 
              height: '100%', 
              display: 'flex', 
              flexDirection: 'column' 
            }}>
            <Typography
              sx={{
                fontWeight: 800,
                fontSize: 34,
                mb: 4
              }}
            >
              Previous Chat
            </Typography>
            <Box sx={{ flexGrow: 1, overflowY: 'auto' }}>
              {chatLoading ? (
                <Box sx={{ display: 'flex', justifyContent: 'center', mt: 4 }}>
                  <CircularProgress />
                </Box>
              ) : chatHistory.length > 0 ? (
                chatHistory.map((chat, i) => (
                  <Paper
                    key={chat.id || i}
                    onClick={() => navigate(`/chat/${chat.document_id || chat.id}`)}
                    sx={{
                      display: 'flex',
                      justifyContent: 'space-between',
                      alignItems: 'center',
                      px: 2,
                      py: 1,
                      border: '1.5px solid #000',
                      borderRadius: 2,
                      boxShadow: '2px 2px 0 #00000020',
                      mb: 1,
                      cursor: 'pointer',
                      '&:hover': { bgcolor: '#f8f8f8' }
                    }}
                  >
                    <Typography sx={{ fontSize: 14 }}>
                      {chat.title || chat.document_name || `Chat ${i + 1}`}
                    </Typography>
                    {/* needs backend. edit/delete options */}
                    <IconButton size='small' sx={{ color: '#000' }}>
                      <MoreHoriz />
                    </IconButton>
                  </Paper>
                ))
              ) : (
                <Typography sx={{ fontSize: 14, color: 'gray', textAlign: 'center', mt: 4 }}>
                  No chat history found
                </Typography>
              )}
            </Box>
          </Box>
        );
      
      case 'documents':
        return (
          <Box>
            <Typography
              sx={{
                fontWeight: 800,
                fontSize: 34,
                mb: 4
              }}
            >
              Recent Documents
            </Typography>

            {loading ? (
              <Box sx={{ display: 'flex', justifyContent: 'center', mt: 4 }}>
                <CircularProgress />
              </Box>
            ) : error ? (
              <Alert severity="error" sx={{ mb: 2 }}>
                {error}
              </Alert>
            ) : (
              <>
                <Grid container spacing={3}>
                  {files.map((file, i) => (
                    <Grid item key={i}>
                      <Paper
                        onClick={() => handleOpenFile(file)}
                        sx={{
                          width: 160,
                          height: 160,
                          border: '1.5px solid #000',
                          borderRadius: 3,
                          p: 2,
                          boxShadow: '3px 3px 0 rgba(0,0,0,0.15)',
                          display: 'flex',
                          flexDirection: 'column',
                          alignItems: 'center',
                          justifyContent: 'space-between',
                          cursor: 'pointer'
                        }}
                      >
                        <Box sx={{ textAlign: 'center', mt: 2 }}>
                          <InsertDriveFileOutlined sx={{ fontSize: 50 }} />
                        </Box>
                        <Box
                          sx={{
                            borderTop: '1px solid #000',
                            width: '100%',
                            mt: 2,
                            pt: 1,
                            textAlign: 'center',
                            position: 'relative'
                          }}
                        >
                          <Typography  // file name restriction generated by AI 
                            sx={{ 
                              fontSize: 14, 
                              fontWeight: 500,
                              overflow: 'hidden',
                              textOverflow: 'ellipsis',
                              whiteSpace: 'nowrap',
                              width: '100%',
                              px: 0.5 
                            }} 
                          >
                            {file.name.length > 20 ? `${file.name.substring(0, 20)}...` : file.name }
                          </Typography>
                          
                          <Typography sx={{ fontSize: 12, color: '#555' }}>
                            {file.date}
                          </Typography>
                          <MoreHoriz
                            sx={{
                              position: 'absolute',
                              right: 4,
                              top: -30,
                              fontSize: 22,
                              color: '#000'
                            }}
                          />
                        </Box>
                      </Paper>
                    </Grid>
                  ))}
                </Grid>

                <Button
                  onClick={() => navigate('/documents')}
                  sx={{
                    textTransform: 'none',
                    textDecoration: 'underline',
                    fontWeight: 800,
                    color: '#000',
                    mt: 1,
                    mb: 2,
                    '&:hover': {
                      backgroundColor: 'transparent', 
                      textDecoration: 'underline', 
                    },
                  }}
                >
                  View All Documents
                </Button>
              </>
            )}
          </Box>
        );

      default:
        return null;
    }
  };

  const DashboardSidebar = (
    <>
      <Box>
        <Box 
          sx={{ 
           display: 'flex',
           alignItems: 'center',
           justifyContent: 'flex-start',
           mb: 6 
          }}
        >
          <Stars sx={{ fontSize: 30, mr: 1 }}/>
          <Typography 
            variant='h5'
            component='h1'
            sx={{ fontWeight: 'bold' }}
          >
            Dashboard
          </Typography>
        </Box>

        <Box sx={{ borderBottom: '1px solid #000', my: 2 }} />

        <Button
          fullWidth
          startIcon={<History />}
          variant={activeTab === 'history' ? 'contained' : 'outlined'}
          onClick={() => setActiveTab('history')}
          sx={{
            border: '1.2px solid #000',
            borderRadius: 2,
            fontWeight: 600,
            textTransform: 'none',
            color: '#000',
            mb: 1.2,
            bgcolor: activeTab === 'history' ? '#ddd' : '#f3f3f3ff',
            boxShadow: '2px 2px 0 rgba(0,0,0,0.15)',
            '&:hover': { bgcolor: activeTab === 'history' ? '#ddd' : '#f8f8f8' },
            justifyContent: 'flex-start',
            pl: 2
          }}
        >
          Chat History
        </Button>

        <Button
          fullWidth
          startIcon={<InsertDriveFileOutlined />}
          variant={activeTab === 'documents' ? 'contained' : 'outlined'}
          onClick={() => setActiveTab('documents')}
          sx={{
            border: '1.2px solid #000',
            borderRadius: 2,
            fontWeight: 600,
            textTransform: 'none',
            color: '#000',
            mb: 1.2,
            bgcolor: activeTab === 'documents' ? '#ddd' : '#f3f3f3ff',
            boxShadow: '2px 2px 0 rgba(0,0,0,0.15)',
            '&:hover': { bgcolor: activeTab === 'documents' ? '#ddd' : '#f8f8f8' },
            justifyContent: 'flex-start',
            pl: 2
          }}
        >
          Documents
        </Button>
      </Box>
      
      <Box>
        <Button
          fullWidth
          variant='outlined'
          onClick={() => navigate('/chat/new')}
          sx={{
            border: '1.2px solid #000',
            borderRadius: 2,
            fontWeight: 600,
            textTransform: 'none',
            color: '#000',
            mt: 1,
            mb: 2,
            boxShadow: '2px 2px 0 rgba(0,0,0,0.15)',
            '&:hover': { bgcolor: '#f8f8f8' }
          }}
        >
          Back to Chatbot
        </Button>
      
        <Box
          sx={{
            display: 'flex',
            alignItems: 'center',
            gap: 1,
            px: 0.5
          }}
        >
          <Paper
              sx={{
                width: 34,
                height: 34,
                borderRadius: '50%',
                border: '1px solid #000',
                display: 'flex',                  
                alignItems: 'center',
                justifyContent: 'center',
                fontWeight: 600,
                bgcolor: '#fff'
              }}
            >
              U
          </Paper>
          <Typography sx={{ fontWeight: 600 }}>User</Typography>
          <Box sx={{ flex: 1 }} />
          <IconButton onClick={handleLogout} sx={{ color: '#000' }}>
            <Logout sx={{ fontSize: 20 }} />
          </IconButton>
        </Box>          
      </Box>
    </>
  );

  return (
    <Box 
      sx={{ 
        display: 'flex', 
        height: '100vh', 
        bgcolor: '#fff', 
        color: '#000', 
        overflow: 'hidden' 
      }}>
      <Box
        sx={{
          width: 240,
          borderRight: '1.5px solid #000',
          display: 'flex',
          flexDirection: 'column',
          justifyContent: 'space-between',
          p: 2.2
        }}
      >
        {DashboardSidebar}
      </Box>

      <Box sx={{ flex: 1, p: 5, overflow: 'auto' }}>
        {renderContent()}
      </Box>
    </Box>
  );
}